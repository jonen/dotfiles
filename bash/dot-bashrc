# vim: ft=bash

# Enable the subsequent settings only in interactive sessions
case $- in
  *i*) ;;
  *) return;;
esac

# Path to your oh-my-bash installation.
export OSH=~/.oh-my-bash

# Set name of the theme to load. 
#OSH_THEME="catppuccin-multiline"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_OSH_DAYS=13

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you don't want the repository to be considered dirty
# if there are untracked files.
SCM_GIT_DISABLE_UNTRACKED_DIRTY="true"

# Uncomment the following line if you want to completely ignore the presence
# of untracked files in the repository.
# SCM_GIT_IGNORE_UNTRACKED="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.  One of the following values can
# be used to specify the timestamp format.
# If not set, the default value is 'yyyy-mm-dd'.
HIST_STAMPS='yyyy-mm-dd'

# Uncomment the following line if you do not want OMB to overwrite the existing
# aliases by the default OMB aliases defined in lib/*.sh
# OMB_DEFAULT_ALIASES="check"

# Would you like to use another custom folder than $OSH/custom?
# OSH_CUSTOM=/path/to/new-custom-folder

# To disable the uses of "sudo" by oh-my-bash, please set "false" to
# this variable.  The default behavior for the empty value is "true".
OMB_USE_SUDO=false

# To enable/disable display of Python virtualenv and condaenv
OMB_PROMPT_SHOW_PYTHON_VENV=true  # enable

# Which completions would you like to load? (completions can be found in ~/.oh-my-bash/completions/*)
# Custom completions may be added to ~/.oh-my-bash/custom/completions/
completions=(
  git
  ssh
  tmux
  pip3
  pip
  brew
  defaults
  dirs
  docker
  docker-compose
  docker-machine
  system
)

# Which aliases would you like to load? (aliases can be found in ~/.oh-my-bash/aliases/*)
# Custom aliases may be added to ~/.oh-my-bash/custom/aliases/
# Example format: aliases=(vagrant composer git-avh)
# Add wisely, as too many aliases slow down shell startup.
aliases=(
  general

)

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-bash/plugins/*)
# Custom plugins may be added to ~/.oh-my-bash/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  bashmarks
  brew
  progress
)

# Which plugins would you like to conditionally load? (plugins can be found in ~/.oh-my-bash/plugins/*)
# Custom plugins may be added to ~/.oh-my-bash/custom/plugins/
# Example format:
#  if [ "$DISPLAY" ] || [ "$SSH" ]; then
#      plugins+=(tmux-autoattach)
#  fi

source "$OSH"/oh-my-bash.sh

# User configuration
# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"

# Aliases

lsd_installed=$(which lsd)
if [ -x "$lsd_installed" ] ; then
  alias ls=lsd
fi
alias ll='ls -lah'
alias l='ls -lh'
alias lsa='ls -lah'
alias la='ls -lA'

alias lg=lazygit

alias scpresume="rsync --partial --progress --rsh=ssh --human-readable"
alias rcopy="rsync --partial --progress --append --rsh=ssh --recursive --human-readable"
alias rmove="rsync --partial --progress --append --rsh=ssh --recursive --human-readable --remove-source-files"
alias less="less -SRXc"

# check for neovim and set alias if installed
nvim_locations=(/usr/bin/nvim /opt/homebrew/bin/nvim)
for location in "${nvim_locations[@]}"; do
  if [ -f "$location" ]; then
    alias vim=nvim
    export EDITOR=nvim
    break
  else
    export EDITOR=vim
  fi
done

export XDG_CONFIG_HOME=~/.config

# Reset colors
unset LSCOLORS
export CLICOLOR=1
export CLICOLOR_FORCE=1

# set homebrew env on macOS
[ -f /opt/homebrew/bin/brew ] && eval "$(/opt/homebrew/bin/brew shellenv)"

# activate fzf fuzzy find
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

export PATH=$PATH:~/.local/bin:/usr/local/bin:~/.fzf/bin:/usr/local/share/dotnet:~/.dotnet/tools:~/.config/tmux/plugins/tmuxifier/bin

[ -f ~/.config/tmux/plugins/tmuxifier/bin/tmuxifier ] && eval "$(tmuxifier init -)"
alias tmi=tmuxifier

[ -f ~/.autoenv/activate.sh ] && source ~/.autoenv/activate.sh
[ -f /opt/homebrew/opt/autoenv/activate.sh ] && source '/opt/homebrew/opt/autoenv/activate.sh'

export PATH="/Users/jon/.local/share/pypoetry/bin:$PATH"
export POETRY_VIRTUALENVS_IN_PROJECT=1
export POETRY_VIRTUALENVS_PROMPT={project_name}-py{python_version}

eval "$(starship init bash)"
[ -f "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"


### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="/Users/jon/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
